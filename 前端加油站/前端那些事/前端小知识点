### 前端小知识点

1. **有关链式写法的理解**

```js
let map = new Map();
map.set(1, 'a').set(2, 'b').set(3, 'c');
```

​	之前你对上面链式写法的理解是后面的set方法都是作用在map上面的因此可以这样写。

​	实际上可以这样写的原因在于 `map.set(1, 'a')` 返回的是当前的Map对象，即 `map = Map(1){1 => 'a'}` 。

​	重点是有返回值，可以在这个返回值的基础上再调用 `set` 方法添加数据项。

2. **前后端经常说的接口到底是啥**

   > 参考自己写的这篇博客 [聊一聊前端中常说的接口]( https://blog.csdn.net/qq_43199318/article/details/103057283 )

​	还不是很透彻，在做react制作简书项目时有了一点理解，在这里记录一下。

```js
// 利用 Ajax 请求获取搜索框中的推荐内容
export const getList = () => {
  return () => {
    // 学到一点新知识：平常老说接口接口，其实这个headererList.json文件就是一个接口
    // 在真正开发的过程中，这个时候就需要和后端的小伙伴进行沟通了，我需要从哪里取数据呢？
    // 经过一致商量之后，咱们就约定在当前目录api文件夹下的headerList.json吧。
    // 前端人员在开发时建立一个api文件夹和一个headerList.json文件，在上线时使用后端提供的
    // ./api/headerList.json 文件，将自己的删掉。
    axios.get('./api/headerList.json').then((res) => {
      
    }).catch(() => {
      console.log('error');
    })
  }
};
```

​	我目前的理解是，前后端凡是需要沟通才能定的一些文件等都可大致理解为接口。

3. **package-lock.json 是干什么的？**

   在利用一些脚手架工具生成一个项目的时候会自动生成一个 package-lock.json 文件，今天在学习 《Vue.js 开发去哪儿网app》6-2 45s 时，老师说是为了确定所利用的依赖包的版本，在团队开发的时候确定一个标准。

4. **JSON 是一个对象时，注意最后一个属性写完之后不能加** `,` 

   JSON 是一个对象时，注意最后一个属性写完之后不能加 `,`，否则会报错，ES6 中现在可以了，但是 JSON 中是不可以的，这是一个不经意间就会犯的小错误。

5. 什么是单页面应用？

   无论在这台服务器上访问的内容是什么都会变为访问这台服务器的根路径下的index.html,然后在 index.html 下会对你访问的路径进行路由处理从而使你访问到你真正想访问的内容。

